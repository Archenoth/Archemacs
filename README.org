#+TITLE:Archenoth's Emacs configuration

This is the Git repo for my Emacs configuration...

The way it is constructed, the file is supposed to be a standalone
configuration separate from =.emacs=, and simply loaded in.

That way, any private configuration or system-specific configuration
can take place without making any changes to the core configuration
in this repo.

So, if you cloned this repo directly into =.emacs.d= (Which is highly
recommended), you can simply include it with:

#+BEGIN_SRC elisp :tangle ~/.emacs :padline no
  (load "~/.emacs.d/dotemacs/dotemacs.el")
#+END_SRC

(You can use =C-c C-v t= while visiting this file in =org-mode= to
export that code into =~/.emacs= if that's all you really need, though
be warned that this will overwrite your existing =.emacs=)

* Installation in a nutshell
1. =cd= to =~/.emacs.d=
2. Run =git clone https://github.com/Archenoth/dotemacs.git=
3. Open this file in =org-mode=. (=emacs dotemacs/README.org=)
4. Tangle with =C-c C-v t= (Or if you have stuff in your =.emacs=,
   copy the above line into it instead.).
5. Restart Emacs.

Also, optionally, you can byte-compile =dotemacs.el= by visiting it
and running =M-x byte-compile-file=.

* Configuration that doesn't really translate
At the very top of [[file:dotemacs.el][dotemacs.el]] you'll see the three variables that
you /will/ need to change if you wish to use the functionality:

#+BEGIN_SRC elisp
  ;;; External links... The part you need to pay attention to if you aren't me.
  ;; http://tkf.github.io/emacs-jedi/latest/
  (setq jedi:server-command '("/usr/local/bin/jediepcserver"))
  ;; http://www.clisp.org/
  (setq inferior-lisp-program "/usr/bin/clisp")
  ;; You can get this from here: https://languagetool.org/
  (setq langtool-language-tool-jar
               "/home/archenoth/Documents/apps/LanguageTool/LanguageTool.jar")
#+END_SRC

The comments list the places you can find the things these variables
point at.

The only one that is worth noting is the =inferior-lisp-program=,
which does not actually have to be =clisp=. but can be most any
Common Lisp implementation. [[http://www.sbcl.org/][SBCL]], for example, is way faster, and has
documentation built-in with =ac-slime=, which is very handy if you
are learning Lisp or like having documentation right in front of you
when you code.
